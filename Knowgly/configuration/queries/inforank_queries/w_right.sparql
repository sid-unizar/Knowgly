PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
  GRAPH <http://sid-unizar-search.com/infoRank> {
 	?RP a <http://sid-unizar-search.com/SubjectPred> .
	?RP <http://purl.org/voc/vrank#w> ?WBounded
  }
}
WHERE {
	SELECT DISTINCT ?RP ?WBounded
	WHERE {
		# For every entity r and predicate p associated to it (on the right side)
		?ignored ?p ?r .

		# Avoid modifying already calculated w's, we only want to insert w's for those
		# entities which, for whatever reason, only appear referenced as objects (from
		# external KGs...) for the predicate p
		MINUS {
			SELECT ?p WHERE {
				GRAPH <http://sid-unizar-search.com/infoRank> {
          			BIND(IRI(CONCAT(str(?r), str(?p))) AS ?rp_to_not_modify) .

					 ?rp_to_not_modify <http://purl.org/voc/vrank#w> ?w_we_do_not_want_to_modify.
				}
			}
		}

		# Get IR(p)
		GRAPH <http://sid-unizar-search.com/infoRank> {
			# We don't care whether it's an object or a datatype property
    		?p <http://purl.org/voc/vrank#ir> ?ir .
		}

  		# Sum of IR(q), where r acts as a subject
		OPTIONAL {
			SELECT ?r (sum(?irSubject) as ?sumSubject)
            WHERE {
              ?r ?q1 ?o .

              GRAPH <http://sid-unizar-search.com/infoRank> {
                # Get IR(q)
                ?q1 <http://purl.org/voc/vrank#ir> ?irSubject
              }
            } GROUP BY ?r
		}

		# Sum of IR(q), where r acts as an object, excluding those q's which appeared
		# when r acted as a subject
		OPTIONAL {
			SELECT ?r (sum(?irObject) as ?sumObject)
			WHERE {
              ?s ?q2 ?r .

              GRAPH <http://sid-unizar-search.com/infoRank> {
                # Get IR(q)
                ?q2 <http://purl.org/voc/vrank#ir> ?irObject
              }

			  FILTER (?q1 != ?q2)

            } GROUP BY ?r
		}

  		BIND(IF(bound(?sumSubject), ?sumSubject, xsd:integer("0")) AS ?sumSubjectBounded)
  		BIND(IF(bound(?sumObject), ?sumObject, xsd:integer("0")) AS ?sumObjectBounded)


		BIND((xsd:float(?ir) / xsd:float(?sumSubjectBounded + ?sumObjectBounded)) AS ?W)


		BIND(IF((?sumSubjectBounded + ?sumObjectBounded) != 0, ?W, xsd:integer("0")) AS ?WBounded)


		BIND(IRI(CONCAT(str(?r), str(?p))) AS ?RP)

		# We can avoid storing cases where W(r,p) is 0
		FILTER (?WBounded != 0)
	}
}
